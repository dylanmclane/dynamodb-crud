service: dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-east-2
  environment: 
    DYNAMODB_TABLE_NAME:
      ${self:custom.DryCleaningService}

custom: 
  DryCleaningService: customer-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getCustomer:
    handler: api.getCustomer
    name: get-customer
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: customer/{customerID}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt DryCleaningService.Arn
  addCustomer:
    handler: api.createCustomer
    name: create-customer
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: customer
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt DryCleaningService.Arn
  updateCustomer:
    handler: api.updateCustomer
    name: update-customer
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: customer/{customerID}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt DryCleaningService.Arn
  deleteCustomer:
    handler: api.deleteCustomer
    name: delete-customer
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: customer
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt DryCleaningService.Arn
  getAllCustomers:
    handler: api.getAllCustomers
    name: get-all-customers
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: customer
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt DryCleaningService.Arn

resources:
  Resources:
    DryCleaningService:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.DryCleaningService}
        AttributeDefinitions: 
          - AttributeName: customerID
            AttributeType: S
        KeySchema:
          - AttributeName: customerID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1